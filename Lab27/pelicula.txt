class Peliculas {

        constructor(nombre) {
        this.nombre = nombre;
    }
    
    //Este método servirá para guardar de manera persistente el nuevo objeto. 
    save() {
        peliculas.push(this.nombre);
    }

    //Este método servirá para devolver los objetos del almacenamiento persistente.
    static fetchAll() {
        db.execute('SELECT Nombre FROM pelicula').then(([rows, fieldData]) => {
            console.log(rows);
        })
            .catch(err => {
                console.log(err);
            }); 
        return peliculas;
    }

}
class Peliculas {

        constructor(nombre) {
        this.nombre = nombre;
    }
    
    //Este método servirá para guardar de manera persistente el nuevo objeto. 
    save() {
        peliculas.push(this.nombre);
    }

    //Este método servirá para devolver los objetos del almacenamiento persistente.
    static fetchAll() {
        db.execute('SELECT Nombre FROM pelicula').then(([rows, fieldData]) => {
            console.log(rows);
        })
            .catch(err => {
                console.log(err);
            }); 
        return peliculas;
    }

}
class Peliculas {

        constructor(nombre) {
        this.nombre = nombre;
    }
    
    //Este método servirá para guardar de manera persistente el nuevo objeto. 
    save() {
        peliculas.push(this.nombre);
    }

    //Este método servirá para devolver los objetos del almacenamiento persistente.
    static fetchAll() {
        db.execute('SELECT Nombre FROM pelicula').then(([rows, fieldData]) => {
            console.log(rows);
        })
            .catch(err => {
                console.log(err);
            }); 
        return peliculas;
    }

}
